   1               		.file	"sensor.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  11               	.global	sensors_init
  13               	sensors_init:
  14               	.LFB6:
  15               		.file 1 "sensor.c"
   1:sensor.c      **** #include <avr/io.h>
   2:sensor.c      **** #include <avr/interrupt.h>
   3:sensor.c      **** #include <stdint.h>
   4:sensor.c      **** #include <util/delay.h>
   5:sensor.c      **** 
   6:sensor.c      **** #include "communicator.h"
   7:sensor.c      **** #include "sensor.h"
   8:sensor.c      **** 
   9:sensor.c      **** /******************************
  10:sensor.c      **** * sensors[0] -> front sensor  *
  11:sensor.c      **** * sensors[1] -> back sensor   *
  12:sensor.c      **** ******************************/
  13:sensor.c      **** 
  14:sensor.c      **** static t_sensor sensors[NUM_OF_SENS];
  15:sensor.c      **** static t_sensor temp[NUM_OF_SENS];
  16:sensor.c      **** static uint8_t state_changed_flag = 1;
  17:sensor.c      **** 
  18:sensor.c      **** //Memristor board
  19:sensor.c      **** // P1 -> PA0
  20:sensor.c      **** // P2 -> PA1
  21:sensor.c      **** void sensors_init(void)
  22:sensor.c      **** {
  16               		.loc 1 22 0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
  23:sensor.c      **** 	DDRA |= (0 << PA7); //sens1 -> P1
  22               		.loc 1 23 0
  23 0000 81B1      		in r24,0x1
  24 0002 81B9      		out 0x1,r24
  24:sensor.c      **** 	DDRA |= (0 << PA6); //sens2 -> P2
  25               		.loc 1 24 0
  26 0004 81B1      		in r24,0x1
  27 0006 81B9      		out 0x1,r24
  25:sensor.c      **** 
  26:sensor.c      **** 	sensors[0].pin = 7; //try with PA7
  28               		.loc 1 26 0
  29 0008 E0E0      		ldi r30,lo8(sensors)
  30 000a F0E0      		ldi r31,hi8(sensors)
  31 000c 87E0      		ldi r24,lo8(7)
  32 000e 8183      		std Z+1,r24
  27:sensor.c      **** 	sensors[1].pin = 6;
  33               		.loc 1 27 0
  34 0010 86E0      		ldi r24,lo8(6)
  35 0012 8383      		std Z+3,r24
  28:sensor.c      **** 
  29:sensor.c      **** 	sensors[0].value = 0;
  36               		.loc 1 29 0
  37 0014 1082      		st Z,__zero_reg__
  30:sensor.c      **** 	sensors[1].value = 0;
  38               		.loc 1 30 0
  39 0016 1282      		std Z+2,__zero_reg__
  40 0018 0895      		ret
  41               		.cfi_endproc
  42               	.LFE6:
  44               	.global	send_sensor_status
  46               	send_sensor_status:
  47               	.LFB8:
  31:sensor.c      **** }
  32:sensor.c      **** 
  33:sensor.c      **** void update_sensor_status(void)
  34:sensor.c      **** {
  35:sensor.c      **** 	temp[0].value = PINA & (1 << sensors[0].pin);
  36:sensor.c      **** 	temp[1].value = PINA & (1 << sensors[1].pin);
  37:sensor.c      **** 
  38:sensor.c      **** 	if(temp[0].value > 0)
  39:sensor.c      **** 		temp[0].value = 0xFF;
  40:sensor.c      **** 	else
  41:sensor.c      **** 		temp[0].value = 0;
  42:sensor.c      **** 
  43:sensor.c      **** 	if(temp[1].value > 0)
  44:sensor.c      **** 		temp[1].value = 0xFF;
  45:sensor.c      **** 	else
  46:sensor.c      **** 		temp[1].value = 0;
  47:sensor.c      **** 
  48:sensor.c      **** 	int i;
  49:sensor.c      **** 	for(i = 0; i < NUM_OF_SENS; i++)
  50:sensor.c      **** 	{
  51:sensor.c      **** 		if(temp[i].value != sensors[i].value)
  52:sensor.c      **** 		{
  53:sensor.c      **** 			state_changed_flag = 1;
  54:sensor.c      **** 		}
  55:sensor.c      **** 		sensors[i].value = temp[i].value;
  56:sensor.c      **** 	}
  57:sensor.c      **** 
  58:sensor.c      **** 	if(state_changed_flag)
  59:sensor.c      **** 	{
  60:sensor.c      **** 		state_changed_flag = 0;
  61:sensor.c      **** 		send_sensor_status();
  62:sensor.c      **** 	}
  63:sensor.c      **** }
  64:sensor.c      **** 
  65:sensor.c      **** void send_sensor_status(void)
  66:sensor.c      **** {
  48               		.loc 1 66 0
  49               		.cfi_startproc
  50 001a CF93      		push r28
  51               	.LCFI0:
  52               		.cfi_def_cfa_offset 3
  53               		.cfi_offset 28, -2
  54 001c DF93      		push r29
  55               	.LCFI1:
  56               		.cfi_def_cfa_offset 4
  57               		.cfi_offset 29, -3
  58               	/* prologue: function */
  59               	/* frame size = 0 */
  60               	/* stack size = 2 */
  61               	.L__stack_usage = 2
  67:sensor.c      **** 
  68:sensor.c      **** 	transmit_byte(0xFE);
  62               		.loc 1 68 0
  63 001e 8EEF      		ldi r24,lo8(-2)
  64 0020 0E94 0000 		call transmit_byte
  65               	.LVL0:
  69:sensor.c      **** 
  70:sensor.c      **** 	int i;
  71:sensor.c      **** 	for(i=0; i<NUM_OF_SENS; i++)
  72:sensor.c      **** 	{
  73:sensor.c      **** 		transmit_byte(sensors[i].value);
  66               		.loc 1 73 0
  67 0024 C0E0      		ldi r28,lo8(sensors)
  68 0026 D0E0      		ldi r29,hi8(sensors)
  69 0028 8881      		ld r24,Y
  70 002a 0E94 0000 		call transmit_byte
  71               	.LVL1:
  72 002e 8A81      		ldd r24,Y+2
  73 0030 0E94 0000 		call transmit_byte
  74               	.LVL2:
  74:sensor.c      **** 	}
  75:sensor.c      **** 
  76:sensor.c      **** 	transmit_byte(0xFC);
  75               		.loc 1 76 0
  76 0034 8CEF      		ldi r24,lo8(-4)
  77               	/* epilogue start */
  77:sensor.c      **** }
  78               		.loc 1 77 0
  79 0036 DF91      		pop r29
  80 0038 CF91      		pop r28
  76:sensor.c      **** }
  81               		.loc 1 76 0
  82 003a 0C94 0000 		jmp transmit_byte
  83               	.LVL3:
  84               		.cfi_endproc
  85               	.LFE8:
  87               	.global	update_sensor_status
  89               	update_sensor_status:
  90               	.LFB7:
  34:sensor.c      **** 	temp[0].value = PINA & (1 << sensors[0].pin);
  91               		.loc 1 34 0
  92               		.cfi_startproc
  93               	/* prologue: function */
  94               	/* frame size = 0 */
  95               	/* stack size = 0 */
  96               	.L__stack_usage = 0
  35:sensor.c      **** 	temp[1].value = PINA & (1 << sensors[1].pin);
  97               		.loc 1 35 0
  98 003e 40B1      		in r20,0
  99 0040 81E0      		ldi r24,lo8(1)
 100 0042 90E0      		ldi r25,0
 101 0044 9C01      		movw r18,r24
 102 0046 0090 0000 		lds r0,sensors+1
 103 004a 00C0      		rjmp 2f
 104               		1:
 105 004c 220F      		lsl r18
 106 004e 331F      		rol r19
 107               		2:
 108 0050 0A94      		dec r0
 109 0052 02F4      		brpl 1b
 110 0054 2423      		and r18,r20
 111 0056 2093 0000 		sts temp,r18
  36:sensor.c      **** 
 112               		.loc 1 36 0
 113 005a 30B1      		in r19,0
 114 005c 0090 0000 		lds r0,sensors+3
 115 0060 00C0      		rjmp 2f
 116               		1:
 117 0062 880F      		lsl r24
 118 0064 991F      		rol r25
 119               		2:
 120 0066 0A94      		dec r0
 121 0068 02F4      		brpl 1b
 122 006a 8323      		and r24,r19
  38:sensor.c      **** 		temp[0].value = 0xFF;
 123               		.loc 1 38 0
 124 006c 2223      		tst r18
 125 006e 01F0      		breq .L4
  39:sensor.c      **** 	else
 126               		.loc 1 39 0
 127 0070 9FEF      		ldi r25,lo8(-1)
 128 0072 9093 0000 		sts temp,r25
 129 0076 00C0      		rjmp .L5
 130               	.L4:
  41:sensor.c      **** 
 131               		.loc 1 41 0
 132 0078 1092 0000 		sts temp,__zero_reg__
 133               	.L5:
  43:sensor.c      **** 		temp[1].value = 0xFF;
 134               		.loc 1 43 0
 135 007c 8823      		tst r24
 136 007e 01F0      		breq .L6
  44:sensor.c      **** 	else
 137               		.loc 1 44 0
 138 0080 8FEF      		ldi r24,lo8(-1)
 139 0082 8093 0000 		sts temp+2,r24
 140               	.L11:
 141               	.LVL4:
  51:sensor.c      **** 		{
 142               		.loc 1 51 0 discriminator 1
 143 0086 8091 0000 		lds r24,temp
 144 008a 9091 0000 		lds r25,sensors
 145 008e 8917      		cp r24,r25
 146 0090 01F0      		breq .L7
  53:sensor.c      **** 		}
 147               		.loc 1 53 0
 148 0092 91E0      		ldi r25,lo8(1)
 149 0094 9093 0000 		sts state_changed_flag,r25
 150               	.L7:
  55:sensor.c      **** 	}
 151               		.loc 1 55 0
 152 0098 8093 0000 		sts sensors,r24
 153               	.LVL5:
  51:sensor.c      **** 		{
 154               		.loc 1 51 0
 155 009c 8091 0000 		lds r24,temp+2
 156 00a0 9091 0000 		lds r25,sensors+2
 157 00a4 8917      		cp r24,r25
 158 00a6 01F0      		breq .L8
  53:sensor.c      **** 		}
 159               		.loc 1 53 0
 160 00a8 91E0      		ldi r25,lo8(1)
 161 00aa 9093 0000 		sts state_changed_flag,r25
 162               	.L8:
  55:sensor.c      **** 	}
 163               		.loc 1 55 0
 164 00ae 8093 0000 		sts sensors+2,r24
 165               	.LVL6:
  58:sensor.c      **** 	{
 166               		.loc 1 58 0
 167 00b2 8091 0000 		lds r24,state_changed_flag
 168 00b6 8823      		tst r24
 169 00b8 01F0      		breq .L12
  60:sensor.c      **** 		send_sensor_status();
 170               		.loc 1 60 0
 171 00ba 1092 0000 		sts state_changed_flag,__zero_reg__
  61:sensor.c      **** 	}
 172               		.loc 1 61 0
 173 00be 0C94 0000 		jmp send_sensor_status
 174               	.LVL7:
 175               	.L6:
  46:sensor.c      **** 
 176               		.loc 1 46 0
 177 00c2 1092 0000 		sts temp+2,__zero_reg__
 178 00c6 00C0      		rjmp .L11
 179               	.LVL8:
 180               	.L12:
 181 00c8 0895      		ret
 182               		.cfi_endproc
 183               	.LFE7:
 185               		.data
 188               	state_changed_flag:
 189 0000 01        		.byte	1
 190               		.local	temp
 191               		.comm	temp,4,1
 192               		.local	sensors
 193               		.comm	sensors,4,1
 194               		.text
 195               	.Letext0:
 196               		.file 2 "/usr/lib/avr/include/stdint.h"
 197               		.file 3 "sensor.h"
 198               		.file 4 "communicator.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 sensor.c
     /tmp/ccmKLZkU.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccmKLZkU.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccmKLZkU.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccmKLZkU.s:5      *ABS*:000000000000003b __RAMPZ__
     /tmp/ccmKLZkU.s:6      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccmKLZkU.s:7      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccmKLZkU.s:13     .text:0000000000000000 sensors_init
     /tmp/ccmKLZkU.s:191    .bss:0000000000000004 sensors
     /tmp/ccmKLZkU.s:46     .text:000000000000001a send_sensor_status
     /tmp/ccmKLZkU.s:89     .text:000000000000003e update_sensor_status
                             .bss:0000000000000000 temp
     /tmp/ccmKLZkU.s:188    .data:0000000000000000 state_changed_flag

UNDEFINED SYMBOLS
transmit_byte
__do_copy_data
__do_clear_bss
